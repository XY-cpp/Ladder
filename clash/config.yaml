# 混合端口 HTTP和SOCKS5用一个端口
mixed-port: 7893
# TCP 并发连接所有 IP, 将使用最快握手的 TCP
tcp-concurrent: true
# 允许局域网的连接（可用来共享代理）
allow-lan: true
# 开启 IPv6 总开关，关闭阻断所有 IPv6 链接和屏蔽 DNS 请求 AAAA 记录  
ipv6: true
# 规则模式：rule/global/direct/script
mode: rule
# 设置日志输出级别: silent/error/warning/info/debug
log-level: info
# 全局 TLS 指纹
global-client-fingerprint: chrome
# 匹配所有进程（always/strict/off）
find-process-mode: strict

# 使用geoip.dat数据库
geodata-mode: true

profile:
  # 存储 select 选择记录
  store-selected: true 
  # 持久化 fake-ip
  store-fake-ip: true  

# 嗅探域名
sniffer:               
  enable: true
  # 是否使用嗅探结果作为实际访问，默认 true
  parse-pure-ip: true  
  sniff:
    TLS:
      ports: [443, 8443]
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    QUIC:
      ports: [443, 8443]

# Tun 配置  
tun:
  enable: true
  # 可选： system/gvisor/mixed；
  stack: mixed
  # dns劫持,一般设置为 any:53 即可, 即劫持所有53端口的udp流量
  dns-hijack: [any:53]
  # 自动设置全局路由，可以自动将全局流量路由进入tun网卡。
  auto-route: true
  # 自动识别出口网卡
  auto-detect-interface: true
        
dns:
  enable: true
  # IPV6解析开关；如果为false，将返回ipv6结果为空
  ipv6: false
  # DNS处理模式，可选值 normal/fake-ip/redir-host
  enhanced-mode: fake-ip
  # DNS监听地址
  listen: :1053
  # Fake-IP解析地址池
  fake-ip-range: 198.18.0.1/16
  # fakeip 过滤，以下地址不会下发 fakeip 映射用于连接
  fake-ip-filter: ['*.lan','*.direct', cable.auth.com, '*.msftconnecttest.com', '*.msftncsi.com', network-test.debian.org, detectportal.firefox.com, resolver1.opendns.com, '*.srv.nintendo.net', '*.stun.playstation.net', 'xbox.*.microsoft.com', '*.xboxlive.com', 'stun.*', global.turn.twilio.com, global.stun.twilio.com, app.yinxiang.com, injections.adguard.org, local.adguard.org, cable.auth.com, 'localhost.*.qq.com', 'localhost.*.weixin.qq.com', '*.logon.battlenet.com.cn', '*.logon.battle.net', '*.blzstatic.cn', 'music.163.com', '*.music.163.com', '*.126.net', musicapi.taihe.com, music.taihe.com, songsearch.kugou.com, trackercdn.kugou.com, '*.kuwo.cn', api-jooxtt.sanook.com, api.joox.com, joox.com, y.qq.com, '*.y.qq.com', streamoc.music.tc.qq.com, mobileoc.music.tc.qq.com, isure.stream.qqmusic.qq.com, dl.stream.qqmusic.qq.com, aqqmusic.tc.qq.com, amobile.music.tc.qq.com, '*.xiami.com', '*.music.migu.cn', music.migu.cn, proxy.golang.org, '*.mcdn.bilivideo.cn', '*.cmpassport.com', id6.me, 'open.e.189.cn', mdn.open.wo.cn, opencloud.wostore.cn, auth.wosms.cn, '*.jegotrip.com.cn', '*.icitymobile.mobi', '*.pingan.com.cn', '*.cmbchina.com', '*.10099.com.cn', pool.ntp.org, '*.pool.ntp.org', 'ntp.*.com', 'time.*.com', 'ntp?.*.com', 'time?.*.com', 'time.*.gov', 'time.*.edu.cn', '*.ntp.org.cn', 'PDC._msDCS.*.*', 'DC._msDCS.*.*', 'GC._msDCS.*.*']
  # 解析非 IP 的 dns 用的 dns 服务器,只支持纯 IP
  default-nameserver: [223.5.5.5, 119.29.29.29]
  # 默认的域名解析服务器
  nameserver: [223.5.5.5, 119.29.29.29]
  # 指定域名查询的解析服务器，可使用 geosite, 优先于 nameserver/fallback 查询
  nameserver-policy:
  'geosite:cn': system
  'geosite:gfw,geolocation-!cn': [quic://223.5.5.5, quic://223.6.6.6, https://1.12.12.12/dns-query, https://120.53.53.53/dns-query]

# 策略组引用相关参数
pg: &pg {type: select, proxies: [节点选择, 全部节点, 香港节点, 马来西亚节点, 英国节点, 土耳其节点, 美国节点, 狮城节点, 日本节点, 阿根廷节点, 台湾节点, DIRECT]}
# 订阅更新和延迟测试相关参数
p: &p {type: http, interval: 86400, health-check: {enable: true, url: https://www.google.com/generate_204, interval: 1800}}
# 自动选择策略组：选取延迟最低节点
url-test: &url-test {type: url-test, url: https://www.google.com/generate_204, interval: 300, tolerance: 0, include-all: true}
# 手动选择策略组：手动选择想要的节点/策略组
select: &select {type: select, include-all: true}
# 故障回退策略组：策略组将按顺序选择你列表中第一个可用的节点
fallback: &fallback {type: fallback, url: https://www.google.com/generate_204, interval: 300, include-all: true}
# 负载均衡策略组：不同的请求将使用不同的代理节点
load-balance: &load-balance {type: load-balance, strategy: consistent-hashing, url: https://www.google.com/generate_204, interval: 300, include-all: true}
# classical规则相关
c: &c {type: http, behavior: classical, format: text, interval: 86400}
# domain规则相关
d: &d {type: http, behavior: domain, format: text, interval: 86400}
# ipcidr规则相关
i: &i {type: http, behavior: ipcidr, format: text, interval: 86400}

proxy-providers:
  sample: {type: http, url: "https//example.com/config.yaml"}

proxy-groups:

  #分流分组

  - {name: 节点选择, type: select, proxies: [全部节点, 香港节点, 马来西亚节点, 英国节点, 土耳其节点, 美国节点, 狮城节点, 日本节点, 阿根廷节点, 台湾节点, DIRECT], icon:  https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Airport.png}

  - {name: 国外网站, <<: *pg, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Global.png}

  - {name: 国际媒体, <<: *pg, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/YouTube.png}

  - {name: 苹果服务, <<: *pg, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Apple_1.png}

  - {name: 微软服务, <<: *pg, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Microsoft.png}

  - {name: 谷歌服务, <<: *pg, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Google_Search.png}

  - {name: 电报消息, <<: *pg, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Telegram.png}

  - {name: 推特消息, <<: *pg, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Twitter.png}

  - {name: AI, <<: *pg, icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/OpenAI.png}

  - {name: 游戏平台, <<: *pg, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Game.png}

  - {name: 广告拦截, type: select, proxies: [REJECT, DIRECT], icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Advertising.png}

  - {name: 兜底分流, <<: *pg, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Final.png}

  #节点地区分组
  - {name: 全部节点, <<: *url-test, proxies: [香港节点, 马来西亚节点, 英国节点, 土耳其节点, 美国节点, 狮城节点, 日本节点, 阿根廷节点, 台湾节点] ,include-all: false, hidden: true, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Rainbow.png}

  - {name: 香港节点, <<: *load-balance, filter: "(?i)🇭🇰|香港|HK|Hong|Hong Kong", hidden: true, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Hong_Kong.png}

  - {name: 马来西亚节点, <<: *load-balance, filter: "(?i)🇲🇾|马来西亚|MYS|Malaysia", hidden: true, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Malaysia.png}

  - {name: 英国节点, <<: *load-balance, filter: "(?i)🇬🇧|英国|UK|United Kingdom", hidden: true, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/United_Kingdom.png}

  - {name: 土耳其节点, <<: *load-balance, filter: "(?i)🇹🇷|土耳其|TR|Turkey", hidden: true, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Turkey.png}

  - {name: 美国节点, <<: *load-balance, filter: "(?i)🇺🇸|美国|洛杉矶|圣何塞|US|United States", hidden: true, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/United_States.png}

  - {name: 狮城节点, <<: *load-balance, filter: "(?i)🇸🇬|新加坡|狮|SG|Singapore", hidden: true, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Singapore.png}

  - {name: 日本节点, <<: *load-balance, filter: "(?i)🇯🇵|日本|东京|JP|Japan", hidden: true, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Japan.png}

  - {name: 阿根廷节点, <<: *load-balance, filter: "(?i)🇦🇷|阿根廷|AR|Argentina", hidden: true, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Argentina.png}

  - {name: 台湾节点, <<: *load-balance, filter: "(?i)🇨🇳|🇹🇼|台湾|TW|Tai|Taiwan", hidden: true, icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Taiwan.png}

rule-providers:
  # 白名单
  White: {<<: *c, url:  https://raw.githubusercontent.com/XY-cpp/Ladder/main/clash/rules/White.list}

  # 广告拦截
  Reject: {<<: *c, url: https://raw.githubusercontent.com/XY-cpp/Ladder/main/clash/rules/Reject.list}

  # 苹果服务
  Apple: {<<: *c,  url: https://raw.githubusercontent.com/XY-cpp/Ladder/main/clash/rules/Apple.list}

  # 谷歌服务
  YouTube: {<<: *c,  url: https://raw.githubusercontent.com/XY-cpp/Ladder/main/clash/rules/YouTube.list}
  Google: {<<: *c,  url: https://raw.githubusercontent.com/XY-cpp/Ladder/main/clash/rules/Google.list}

  # 电报消息
  Telegram: {<<: *c,  url: https://raw.githubusercontent.com/XY-cpp/Ladder/main/clash/rules/Telegram.list}

  # 推特消息
  Twitter: {<<: *c,  url: https://raw.githubusercontent.com/XY-cpp/Ladder/main/clash/rules/Twitter.list}

  # 游戏平台
  Steam: {<<: *c,  url: https://raw.githubusercontent.com/XY-cpp/Ladder/main/clash/rules/Steam.list}

  # AI平台
  AI: {<<: *c,  url: https://raw.githubusercontent.com/XY-cpp/Ladder/main/clash/rules/AI.list}

  # 国际媒体
  Spotify: {<<: *c,  url: https://raw.githubusercontent.com/XY-cpp/Ladder/main/clash/rules/Spotify.list}
  Netflix: {<<: *c,  url: https://raw.githubusercontent.com/XY-cpp/Ladder/main/clash/rules/Netflix.list}
  Disney: {<<: *c,  url: https://raw.githubusercontent.com/XY-cpp/Ladder/main/clash/rules/Disney.list}
  PrimeVideo: {<<: *c,  url: https://raw.githubusercontent.com/XY-cpp/Ladder/main/clash/rules/PrimeVideo.list}
  HBO: {<<: *c,  url: https://raw.githubusercontent.com/XY-cpp/Ladder/main/clash/rules/HBO.list}

rules:
  - RULE-SET,White,DIRECT
  - RULE-SET,Reject,广告拦截
  - RULE-SET,AI,AI
  - RULE-SET,Apple,苹果服务
  - RULE-SET,YouTube,谷歌服务
  - RULE-SET,Google,谷歌服务
  - RULE-SET,Telegram,电报消息
  - RULE-SET,Twitter,推特消息
  - RULE-SET,Steam,游戏平台
  - RULE-SET,Spotify,国际媒体
  - RULE-SET,Netflix,国际媒体
  - RULE-SET,Disney,国际媒体
  - RULE-SET,PrimeVideo,国际媒体
  - RULE-SET,HBO,国际媒体
  - GEOSITE,onedrive,微软服务
  - GEOSITE,github,微软服务
  - GEOSITE,microsoft,微软服务
  - GEOSITE,gfw,国外网站
  - GEOSITE,cn,DIRECT
  - GEOIP,lan,DIRECT
  - GEOIP,CN,DIRECT
  - MATCH,兜底分流